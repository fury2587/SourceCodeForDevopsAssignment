# Upstream servers
upstream service1 {
    server service1:8001;
}

upstream service2 {
    server service2:8002;
}

log_format custom '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "upstream: $upstream_addr" '
                  'request_time: $request_time';

server {
    listen 80;
    server_name localhost;

    access_log /var/log/nginx/access.log custom;
    error_log /var/log/nginx/error.log;

    # Health check endpoint
    location /health {
        return 200 '{"status": "nginx healthy", "timestamp": "$time_iso8601"}\n';
        add_header Content-Type application/json;
    }

    location /service1 {
        rewrite ^/service1/?(.*) /$1 break;
        proxy_pass http://service1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        add_header X-Served-By nginx always;
        add_header X-Upstream service1 always;
    }

    location /service2 {
        rewrite ^/service2/?(.*) /$1 break;
        proxy_pass http://service2;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        add_header X-Served-By nginx always;
        add_header X-Upstream service2 always;
    }

    # Default location
    location / {
        return 200 '{"message": "Welcome! Use /service1 or /service2", "available_endpoints": ["/service1", "/service2", "/health"]}\n';
        add_header Content-Type application/json;
    }
}